@model Services.ExpenseCategoryManager.VmExpenseCategory
@{
    ViewBag.Name = "Expense Category";
}
@if (TempData["AddSuccessMessage"] != null)
{
    <div class="alert alert-success" id="success-alert">
        <button type="button" class="close" data-dismiss="alert">x</button>
        <strong>@TempData["AddSuccessMessage"]</strong>
    </div>
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-info" id="success-alert">
        <button type="button" class="close" data-dismiss="alert">x</button>
        <strong>@TempData["SuccessMessage"]</strong>
    </div>
}
@if (TempData["NotUniqueMessage"] != null)
{
    <div class="alert alert-danger" id="success-alert">
        <button type="button" class="close" data-dismiss="alert">x</button>
        <strong>@TempData["NotUniqueMessage"]</strong>
    </div>
}
<div class="modal fade" id="ExpenseCategoryModal" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            @using (Html.BeginForm("AddorUpdate", "ExpenseCategory", FormMethod.Post, new { @id = "mainForm", enctype = "multipart/form-data", onSubmit = "return ValidateFormData()" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <input type="hidden" name="Id" id="Id" class="form-control" value="0" />
                <div class="modal-header">
                    <h5 class="modal-Name" id="AddorEditModalHeader"></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-sm-12">
                            <label class="mt-3">
                                Name <sup class="text-danger">*</sup><br /><small>
                                    Name of the Expense Category
                                </small>
                            </label>
                            <input type="text" name="Name" id="Name" class="form-control" />
                            <span class="text-danger" id="spnName"></span>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary" id="save">Save changes</button>
                </div>
            }
        </div>
    </div>
</div>
<!--Header Section-->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">@ViewBag.Name</h1>
            </div><!-- /.col -->
            <div class="col-sm-6 text-right">
                <a class="btn bg-blue" data-toggle="modal" data-target="#ExpenseCategoryModal">
                    <i class="fa fa-plus-square"></i>
                    Add new
                </a>
            </div>
        </div>
    </div>
</div>


<section class="content">
    <div class="container-fluid">
        <div class="card">
            <div class="card-header">
                <h3 class="card-Name">Existing Expense Categories</h3>
            </div>
            <div class="card-body pb-0">
                <span id="exportButtons" class="text-right"></span>
            </div>
            <div class="card-body">
                <table id="dataTable" class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</section>

@section Scripts{
    <script>
        var oTable;
        $(document).ready(function () {
            //alert & modal
            $("#success-alert").fadeTo(2000, 500).slideUp(500, function () {
                $("#success-alert").slideUp(500);
            });
            $('#AddorEditModalHeader').text('Add New Expense Category');

            //datatable
            oTable = $('#dataTable').DataTable({
                "lengthMenu": [[25, 50, 100], [25, 50, 100]],
                "pageLength": 50,
                "processing": true,
                "serverSide": true,
                "ajax": {
                    url: "/ExpenseCategory/AjaxDataList"
                },
                "columns": [
                    { "data": "name" },
                    {
                        "Name": "Action",
                        "render": function (data, type, row, meta) {
                            var id = row.id;
                            return '<a href="javascript:void(0)" onclick="GetData(' + id + ')"><i class="mr-2 text-info far fa-edit"></i></a><a href="javascript:void(0)" onclick="DeleteConfirm(this)" HeaderId="' + id + '" class="delete"><i class="text-danger far fa-trash-alt"></i></a>';
                        }
                    }
                ]
            });
        });

        //Empty Validation
        function ValidateFormData() {
            $('#save').prop('disabled', true);
            isValid = true;

            //values
            var Name = $('#Name').val();

            //validation msg
            $('#spnName').hide();



            if (Name == null || Name == "" || typeof Name == "undefined") {
                $('#spnName').text("Name is required");
                $('#spnName').show();
                isValid = false;
            }
            if (isValid == false) {
                $('#save').prop('disabled', false);
            }
            return isValid;
        }

        $("#Name").keypress(function () {
            $("#spnName").hide();
        });

        //reset modal
        $('#ExpenseCategoryModal').on('hidden.bs.modal', function () {
            $(this).find('form').trigger('reset');
            $('#AddorEditModalHeader').text('Add New Expense Category');
        })
        //reset modal

        //get data to edit
        function GetData(id) {
            $.ajax({
                url: "/ExpenseCategory/Get/" + id,
                type: "GET",
                contentType: "application/json;charset=UTF-8",
                datatype: "json",
                success: function (response) {
                    $('#Id').val(response.id);
                    $('#Name').val(response.name);
                    $('#AddorEditModalHeader').text('Edit Expense Category');
                    $('#ExpenseCategoryModal').modal('show');
                }
            });
        }
        //edit data

        //delete confirmation
        var id;
        function DeleteConfirm(elem) {
            id = $(elem).attr("HeaderId");
            Swal.fire({
                Name: 'Think Again. Are you sure you want to delete this',
                text: "Once delete, you won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                cancelButtonColor: '#d33',
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.value) {
                    //undo delete
                    let timerInterval
                    Swal.fire({
                        Name: 'Deleting! Want to Cancel Deleting?',
                        html: 'It will take <b></b> milliseconds to delete.',
                        timer: 3000,
                        timerProgressBar: true,
                        showCancelButton: true,
                        cancelButtonColor: '#d33',
                        onBeforeOpen: () => {
                            Swal.showLoading()
                            timerInterval = setInterval(() => {
                                const content = Swal.getContent()
                                if (content) {
                                    const b = content.querySelector('b')
                                    if (b) {
                                        b.textContent = Swal.getTimerLeft()
                                    }
                                }
                            }, 100)
                        },
                        onClose: () => {
                            clearInterval(timerInterval)
                        }
                    }).then((result) => {
                        if (result.dismiss === Swal.DismissReason.timer) {
                            //delete
                            debugger
                            $.get("/ExpenseCategory/Delete/" + id, function (data) {
                                RowId = 0;
                                if (!data || typeof data === 'undefined') {
                                    Swal.fire({
                                        type: 'error',
                                        position: 'center',
                                        text: 'Something Wrong, Delete Related Data & Try again...!!!',
                                        showConfirmButton: false,
                                        timer: 2000
                                    });
                                }
                                else {
                                    Swal.fire({
                                        position: 'center',
                                        type: 'success',
                                        text: 'Deleted Successfully!',
                                        showConfirmButton: false,
                                        timer: 2000
                                    });
                                }
                                setTimeout(function () {
                                    oTable.ajax.reload();
                                }, 2300)
                                $('#DeleteConfirmation').modal('hide');
                            });
                            //delete
                        }
                    })
                    //undo delete
                }
            });

        }
        //delete confirmation
    </script>
}